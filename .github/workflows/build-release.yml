# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:

      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [windows-2019]

      steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller
          pyinstaller -F main.py
          ls
          
#       - name: Gzip on Windows
#         if: matrix.os == 'windows-2019'
#         run: |
#           cp shopid.yaml ./dist/
#           cp config.yaml ./dist/
#           cp LICENSE ./dist/
#           tar -czvf ${{ matrix.os }}.tar.gz dist/
          
#       - name: Gzip on Macos
#         if: matrix.os == 'macos-10.15'
#         run: |
#           cp shopid.yaml dist/
#           cp config.yaml dist/
#           cp LICENSE dist/
#           tar -czvf ${{ matrix.os }}.tar.gz dist/
      
#       - name: Gzip on Ubuntu
#         if: matrix.os == 'ubuntu-18.04'
#         run: |
#           cp shopid.yaml dist/
#           cp config.yaml dist/
#           cp LICENSE dist/
#           tar -czvf ${{ matrix.os }}.tar.gz dist/
          
#       - name: Create Release # 创建Release，可以在仓库看到一个个版本
#         id: create_release
#         uses: actions/create-release@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
#         with:
#           tag_name: ${{ github.ref }} # (tag)标签名称
#           release_name: Release ${{ github.ref }}
#           draft: false # 是否是草稿
#           prerelease: false # 是否是预发布
          
#       - name: Upload Release Asset
#         id: upload-release-asset
#         uses: actions/upload-release-asset@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
#           asset_path: ${{ matrix.os }}.tar.gz # 要上传文件
#           asset_name: ${{ matrix.os }}_${{ github.ref }}.tar.gz # 上传后的文件名
#           asset_content_type: application/x-tgz
#       - name: release
#         uses: softprops/action-gh-release@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: ${{ matrix.os }}.tar.gz
#         env:
#           GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Push
        run: |
          git config --global user.email 1258255974@qq.com
          git config --global user.name FionJones
          git add .
          git commit -m "Update Dist"
           
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          
